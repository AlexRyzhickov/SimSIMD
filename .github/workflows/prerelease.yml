name: Pre-Release

on:
  push:
    branches: ["main-dev"]
  pull_request:
    branches: ["main-dev"]

env:
  BUILD_TYPE: Release
  GH_TOKEN: ${{ secrets.SEMANTIC_RELEASE_TOKEN }}
  PYTHONUTF8: 1

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read

jobs:

  test_python:
    name: Test Python ${{ matrix.os }} ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, macOS-11] # windows-2022
        python-version: ["3.11", "3.10"]

    steps:
      - uses: actions/checkout@v3
      - run: git submodule update --init --recursive
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
        
      - name: Install dependencies
        run: |
          python -m pip install --no-cache-dir --upgrade pip
          pip install --no-cache-dir pytest numpy scipy py-cpuinfo
          python -c "from cpuinfo import get_cpu_info; print(get_cpu_info())"

      - name: Check compiler version and supported architectures
        run: |
          sudo apt-get update && sudo apt-get install -y gcc-12
          gcc-12 -v
          gcc-12 -march=native -E - < /dev/null -o /dev/null
          gcc-12 -E - -m1 - < /dev/null
        if: ${{ matrix.os == 'ubuntu-22.04' }}

      - name: Build locally on Ubuntu
        run: |
          sudo apt-get install -y gcc-12
          export CC=gcc-12
          python -m pip install .
        if: ${{ matrix.os == 'ubuntu-22.04' }}

      - name: Build locally on MacOS
        run: |
          brew install llvm
          echo "/usr/local/opt/llvm/bin" >> $GITHUB_PATH
          python -m pip install .
        if: ${{ matrix.os == 'macOS-11' }}

      - name: Set up MinGW
        uses: egor-tensin/setup-mingw@v2
        with:
          platform: x64
        if: ${{ matrix.os == 'windows-2022' }}

      - name: Build locally on Windows
        run: |
          python -m pip install .
        if: ${{ matrix.os == 'windows-2022' }}
        
      - name: Test with PyTest
        run: |
          python -c "import simsimd; print(simsimd.get_capabilities())"
          pytest python/test.py
        